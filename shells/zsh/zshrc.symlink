# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation.

[[ -z "$DOTFILES_ROOT" ]] && export DOTFILES_ROOT="$HOME/.dotfiles"
[[ -s "$DOTFILES_ROOT/platforms/profile" ]] && source "$DOTFILES_ROOT/platforms/profile"

export "ZSH=$HOME/.oh-my-zsh"

export HISTIGNORE='pwd:exit:fg:bg:top:clear:history:ls:uptime:df:ll:la:gst'
export HISTCONTROL=ignoredups
export HISTSIZE=10000


# all of our zsh files
shells_zsh=($DOTFILES_ROOT/shells/zsh/**/*.zsh)
platform_zsh=

if [ $PLATFORM = "Darwin" ]; then
  platform_zsh=($DOTFILES_ROOT/platforms/mac/**/*.zsh)
elif [ $PLATFORM = "Linux" ]; then
  platform_zsh=($DOTFILES_ROOT/platforms/linux/**/*.zsh)
elif [ $PLATFORM = "Cygwin" ]; then
  platform_zsh=($DOTFILES_ROOT/platforms/win/**/*.zsh)
  # initialize autocomplete here, otherwise functions won't be loaded
  autoload -U compinit
  compinit
fi

typeset -U config_files
config_files=(${shells_zsh[@]} ${platform_zsh[@]})

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# bindkey with Emacs style. This is for tmux-yank plugin.
bindkey -e

# Load local zshrc if it exists. This should stay at the end of .zshrc
# to give user a chance to rewrite the default settings.
[ -f ~/.local.zshrc ] && source ~/.local.zshrc

[[ -e "${HOME}/.iterm2_shell_integration.zsh" ]] && source "${HOME}/.iterm2_shell_integration.zsh"

# fzf configurations
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

FD_OPTIONS="--hidden --follow --exclude .git --exclude node_modules"
export FZF_DEFAULT_OPTS="--no-mouse --height 50% -1 --reverse --multi --inline-info --preview='[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || (bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -300' --preview-window='right:hidden:wrap' --bind='f3:execute(bat --style=numbers {} || less -f {}),f2:toggle-preview,ctrl-d:half-page-down,ctrl-u:half-page-up,ctrl-a:select-all+accept,ctrl-y:execute-silent(echo {+} | pbcopy),ctrl-x:execute(rm -i {+})+abort'"
# Use git-ls-files inside git repo, otherwise fd
export FZF_DEFAULT_COMMAND="git ls-files --cached --others --exclude-standard || fd --type f --type l $FD_OPTIONS"
export FZF_CTRL_T_COMMAND="fd $FD_OPTIONS"
export FZF_ALT_C_COMMAND="fd --type d $FD_OPTIONS"

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# for fzf '**' shell completions.
# - The first argument to the function ($1) is the base path to start traversal
_fzf_compgen_path() {
  command fd --hidden --follow --exclude .git --exclude node_modules . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  command fd --type d --hidden --follow --exclude .git --exclude node_modules . "$1"
}

# ruby env settings
[ -d ~/.rbenv ] && eval "$(rbenv init -)"

# jenv settings
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

# Load pyenv automatically by appending
# # the following to
# ~/.zprofile (for login shells)
# and ~/.zshrc (for interactive shells) :

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
# This scrip is going to be load at the end of profile, give user chance to
# override the existing settings.
[[ -s ~/.localrc ]] && source ~/.localrc

######################### Appended not by me ###############################
export PATH=/Users/jondong/Library/Python/3.9/bin:$PATH

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
. "$HOME/.cargo/env"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
